#!/usr/bin/env python

#  Copyright 2019 Tina Van (van@uni-bremen.de), Georg Bartels (georg.bartels@cs.uni-bremen.de).
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.

#  You should have received a copy of the GNU Lesser General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

import rospy


# printing number on console and log
class TestNode(object):
    def __init__(self):
        """
        publishes log msg through speaking_numberNode topic.
        """
        self.num = 0
        self.name_str = None
        self.rate = rospy.get_param('~speech_rate', 1)
        self.onlyInfo = rospy.get_param('~onlyInfo', False)

    def speaking(self):
        """
        starts to count in an 1 hz rate from 0 upwards and publishes it as SpeakingNumber.
        """
        rate = rospy.Rate(self.rate) # speaking rate
        while not rospy.is_shutdown():
            self.num += 1

            rospy.logdebug(self.get_speech())

            if self.onlyInfo:
                rospy.loginfo(self.get_speech())
            else:
                if (self.num %10) < 5:
                    rospy.loginfo(self.get_speech())
                elif (self.num % 5) < 4:
                    rospy.logwarn(self.get_speech())
                else:
                    rospy.logerr(self.get_speech())
            rate.sleep()

    def get_speech(self):
        return "count: {}".format(self.num)


if __name__ == "__main__":
    rospy.init_node('test_node', anonymous=True)
    my_node = TestNode()
    rospy.sleep(1.0) # initial sleep time
    my_node.speaking()